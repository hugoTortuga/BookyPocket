Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"android.cnam.bookypocket\">\r\n    <!--\r\n         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\r\n         Google Maps Android API v2, but you must specify either coarse or fine\r\n         location permissions for the \"MyLocation\" functionality.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /> <!-- get an approximative location (WiFi, 3G/4G, IP) -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity android:name=\".ManageAccountActivity\" />\r\n        <activity android:name=\".BookyMapTestActivity\" />\r\n        <!--\r\n     The API key for Google Maps-based APIs is defined as a string resource.\r\n     (See the file \"res/values/google_maps_api.xml\").\r\n     Note that the API key is linked to the encryption key used to sign the APK.\r\n     You need a different API key for each encryption key, including the release key that is used to\r\n     sign the APK for publishing.\r\n     You can define the keys for the debug and release targets in src/debug/ and src/release/.\r\n        -->\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyANwoe5yvq5KocIFHBDlngGeNSFsTp5pnI\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.vision.DEPENDENCIES\"\r\n            android:value=\"barcode\" />\r\n\r\n        <activity android:name=\".BookDetailsActivity\" />\r\n        <activity android:name=\".RegisterBookActivity\" />\r\n        <activity android:name=\".SignUpActivity\" />\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity android:name=\".ReadingsActivity\" />\r\n        <activity android:name=\".BookSearchActivity\" />\r\n        <activity\r\n            android:name=\".BookyMapActivity\"\r\n            android:label=\"@string/title_activity_booky_map\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 4ebb6eed9b49fa7828285a323316438ea1c3a952)
+++ app/src/main/AndroidManifest.xml	(date 1612279970090)
@@ -20,6 +20,7 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme"
         android:usesCleartextTraffic="true">
+        <activity android:name=".BarCodeReaderActivity"></activity>
         <activity android:name=".ManageAccountActivity" />
         <activity android:name=".BookyMapTestActivity" />
         <!--
@@ -33,7 +34,6 @@
         <meta-data
             android:name="com.google.android.geo.API_KEY"
             android:value="AIzaSyANwoe5yvq5KocIFHBDlngGeNSFsTp5pnI" />
-
         <meta-data
             android:name="com.google.android.gms.vision.DEPENDENCIES"
             android:value="barcode" />
Index: app/src/main/java/android/cnam/bookypocket/RegisterBookActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package android.cnam.bookypocket;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.cnam.bookypocket.DBManager.ORMSQLiteManager;\r\nimport android.cnam.bookypocket.DBManager.Session;\r\nimport android.cnam.bookypocket.Model.*;\r\nimport android.cnam.bookypocket.Utils.Alert;\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class RegisterBookActivity extends AppCompatActivity {\r\n\r\n    //User inputs for a book\r\n    private EditText titleValue;\r\n    private String title;\r\n    private EditText authorValue;\r\n    private String author;\r\n    private EditText publicationYearValue;\r\n    private String publicationYear;\r\n    private Spinner categorySpinner;\r\n    private Button scanButton;\r\n    private Button addBookButton;\r\n\r\n    private Context context;\r\n\r\n    //will be fulled with model data\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register_book);\r\n        context = this;\r\n        InitializeViewComponents();\r\n    }\r\n\r\n    private void InitializeViewComponents(){\r\n        //details of the book to register\r\n        titleValue = (EditText)findViewById(R.id.register_titleValue);\r\n        this.title = titleValue.getText().toString();\r\n\r\n        authorValue = (EditText)findViewById(R.id.register_authorValue);\r\n        this.author = authorValue.getText().toString();\r\n\r\n        publicationYearValue = (EditText)findViewById(R.id.register_publicationYearValue);\r\n        this.publicationYear = publicationYearValue.getText().toString();\r\n\r\n        createCategorySpinner();\r\n\r\n        //Buttons\r\n        scanButton = findViewById(R.id.register_scanButton);\r\n        scanButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //scanOrTakePicture();\r\n            }\r\n        });\r\n\r\n        addBookButton = findViewById(R.id.register_addButton);\r\n        RegisterBook();\r\n    }\r\n\r\n    private void RegisterBook(){\r\n        addBookButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                try {\r\n\r\n                    Book book = getInfoBookFromForm();\r\n                    if(book == null)\r\n                        return;\r\n\r\n                    Reader reader = Session.getCurrentUser();\r\n\r\n                    ReaderBook readerBook = new ReaderBook(reader, book);\r\n\r\n                    if(reader != null){\r\n                        //On insère notre reader\r\n                        ORMSQLiteManager db = new ORMSQLiteManager(context);\r\n                        db.insertObjectInDB(book, Book.class);\r\n                        db.insertObjectInDB(readerBook, ReaderBook.class);\r\n                        db.close();\r\n                        Alert.ShowDialog(context, \"Succès\", \"Livre enregistré\");\r\n                    }\r\n\r\n                    //On retourne à l'écran de connexion\r\n                    //goToHome();\r\n\r\n                } catch (Exception ex) {\r\n                    if(ex.getClass() == java.sql.SQLException.class)\r\n                        Alert.ShowDialog(context, \"Erreur\", \"Le livre a été enregistré\");\r\n                    else\r\n                        Alert.ShowDialog(context, \"Erreur\", ex.getMessage());\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private Book getInfoBookFromForm() {\r\n        Book b = new Book();\r\n        if(title == null || title.trim().equals(\"\")){\r\n            Alert.ShowDialog(this, \"Information manquante\", \"Le titre n'est pas renseigné\");\r\n            return null;\r\n        }\r\n\r\n        // TODO check all info\r\n        b.setCategory((Category)this.categorySpinner.getSelectedItem());\r\n\r\n        return b;\r\n    }\r\n\r\n    private void createCategorySpinner(){\r\n\r\n        try{\r\n            List<Category> categories = new ArrayList<>();\r\n            ORMSQLiteManager DB_Manager = new ORMSQLiteManager(this);\r\n            categories = DB_Manager.getAllObjects(Category.class);\r\n            List<String> libelleCategories = new ArrayList<>();\r\n            for(Category cat : categories){\r\n                libelleCategories.add(cat.getName());\r\n            }\r\n            Collections.sort(libelleCategories);\r\n            categorySpinner = (Spinner) findViewById(R.id.register_categorySpinner);\r\n            ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,\r\n                    android.R.layout.simple_spinner_item,\r\n                    libelleCategories);\r\n\r\n            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            this.categorySpinner.setAdapter(adapter);\r\n\r\n            // When user select a List-Item.\r\n            this.categorySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                @Override\r\n                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                    onItemSelectedHandlerCategory(parent, view, position, id);\r\n                }\r\n\r\n                @Override\r\n                public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n                }\r\n            });\r\n        }\r\n        catch (Exception ex){\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void onItemSelectedHandlerCategory(AdapterView<?> adapterView, View view, int position, long id) {\r\n        Adapter adapter = adapterView.getAdapter();\r\n//        Category category = (Category) adapter.getItem(position);\r\n        //this.category = category;\r\n//        Toast.makeText(getApplicationContext(), \"Selected Category : \" + category.getName() ,Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n\r\n    private void scanOrTakePicture(){\r\n        //BarcodeDetector barcodeDetector = new BarcodeDetector.Builder(context).build();\r\n    }\r\n\r\n    //Request to add a book\r\n    private void addBook(){\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/android/cnam/bookypocket/RegisterBookActivity.java	(revision 4ebb6eed9b49fa7828285a323316438ea1c3a952)
+++ app/src/main/java/android/cnam/bookypocket/RegisterBookActivity.java	(date 1612283602863)
@@ -6,6 +6,7 @@
 import android.cnam.bookypocket.DBManager.Session;
 import android.cnam.bookypocket.Model.*;
 import android.cnam.bookypocket.Utils.Alert;
+import android.cnam.bookypocket.Utils.ChangeActivity;
 import android.content.Context;
 import android.os.Bundle;
 import android.view.View;
@@ -170,7 +171,7 @@
 
 
     private void scanOrTakePicture(){
-        //BarcodeDetector barcodeDetector = new BarcodeDetector.Builder(context).build();
+        ChangeActivity.ChangeActivity(this, BarCodeReaderActivity.class);
     }
 
     //Request to add a book
Index: app/src/main/res/layout/activity_bar_code_reader.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_bar_code_reader.xml	(date 1612279970144)
+++ app/src/main/res/layout/activity_bar_code_reader.xml	(date 1612279970144)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".BarCodeReaderActivity">
+
+    <SurfaceView
+        android:id="@+id/surface_view"
+        android:layout_width="match_parent"
+        android:layout_height="300dp"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        android:layout_marginTop="100dp"
+        />
+
+    <TextView
+        android:id="@+id/barcode_text"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_marginLeft="30dp"
+        android:layout_marginRight="30dp"
+        app:layout_constraintTop_toBottomOf="@id/surface_view"
+        android:layout_marginTop="50dp"
+        android:text="Barcode Text"
+        android:textSize="25sp"
+        android:padding="5dp"/>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/android/cnam/bookypocket/BarCodeReaderActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/android/cnam/bookypocket/BarCodeReaderActivity.java	(date 1612283554670)
+++ app/src/main/java/android/cnam/bookypocket/BarCodeReaderActivity.java	(date 1612283554670)
@@ -0,0 +1,109 @@
+package android.cnam.bookypocket;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
+
+import android.Manifest;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.util.SparseArray;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.gms.vision.CameraSource;
+import com.google.android.gms.vision.Detector;
+import com.google.android.gms.vision.barcode.Barcode;
+import com.google.android.gms.vision.barcode.BarcodeDetector;
+
+import java.io.IOException;
+
+public class BarCodeReaderActivity extends AppCompatActivity {
+
+    private SurfaceView surfaceView;
+    private BarcodeDetector barcodeDetector;
+    private CameraSource cameraSource;
+    private static final int REQUEST_CAMERA_PERMISSION = 201;
+    private TextView barcodeInfo;
+    private String barcodeData;
+
+    private Barcode barcode;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_bar_code_reader);
+        surfaceView = findViewById(R.id.surface_view);
+        barcodeInfo = findViewById(R.id.barcode_text);
+
+    }
+
+    private void checkCameraPermission() throws IOException {
+        if (ActivityCompat.checkSelfPermission(BarCodeReaderActivity.this, Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED) {
+            cameraSource.start(surfaceView.getHolder());
+        } else {
+
+            //request permission
+            ActivityCompat.requestPermissions(BarCodeReaderActivity.this, new
+                    String[]{Manifest.permission.CAMERA}, REQUEST_CAMERA_PERMISSION);
+        }
+    }
+    private void scan(){
+        barcodeDetector.setProcessor(new Detector.Processor<Barcode>(){
+
+            @Override
+            public void release() {
+                Toast.makeText(getApplicationContext(), "To prevent memory leaks barcode scanner has been stopped", Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void receiveDetections(Detector.Detections<Barcode> detections) {
+                final SparseArray<Barcode> barcodes = detections.getDetectedItems();
+                if (barcodes.size() != 0) {
+                    barcodeInfo.post(new Runnable() {
+
+                        @Override
+                        public void run() {
+                            barcodeInfo.setText(barcodes.valueAt(0).displayValue);
+                        }
+                    });
+                }
+            };
+
+        });
+    }
+
+    private void initialize(){
+        //check if scnner activ
+        Toast.makeText(getApplicationContext(), "Barcode scanner started", Toast.LENGTH_SHORT).show();
+
+        barcodeDetector = new BarcodeDetector.Builder(this).setBarcodeFormats(Barcode.ISBN).build();
+        cameraSource = new CameraSource.Builder(this, barcodeDetector).setRequestedPreviewSize(1920,1080).setAutoFocusEnabled(true).build();
+        surfaceView.getHolder().addCallback(new SurfaceHolder.Callback(){
+
+            @Override
+            public void surfaceCreated(@NonNull SurfaceHolder holder) {
+                try {
+                    checkCameraPermission();
+
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+
+            @Override
+            public void surfaceChanged(@NonNull SurfaceHolder holder, int format, int width, int height) {
+
+            }
+
+            @Override
+            public void surfaceDestroyed(@NonNull SurfaceHolder holder) {
+
+            }
+        });
+    }
+
+
+}
\ No newline at end of file
